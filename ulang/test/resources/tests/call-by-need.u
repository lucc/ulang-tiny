
define

skip x y := y;
self x := x x;
omega := self self;

test

// defined functions are called by need
skip omega Foo
== Foo;

// anonymous lambdas are called by need
(lambda x y -> y) ((lambda x -> x x)(lambda x -> x x)) Foo
== Foo;

// let bindings should not reduce lazyness
(let skip := lambda x y -> y;
     self := lambda x -> x x in
 let omega := self self in
skip omega Foo)
== Foo;
